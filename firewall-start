#!/bin/bash

iptables -L -n -v
ip6tables -L -n -v

IP4TABLES="/sbin/iptables"
IP6TABLES="/sbin/ip6tables"

[ -x $IP4TABLES ] || { echo "Error: $IP4TABLES not found" ; exit 1 ; }
[ -x $IP6TABLES ] || { echo "Error: $IP6TABLES not found" ; exit 1 ; }

$IP6TABLES -F
$IP6TABLES -X
$IP6TABLES -P INPUT   DROP
$IP6TABLES -P OUTPUT  DROP
$IP6TABLES -P FORWARD DROP
$IP6TABLES -A INPUT -i lo -j ACCEPT
$IP6TABLES -A OUTPUT -o lo -j ACCEPT

$IP4TABLES -F
$IP4TABLES -X
$IP4TABLES -P INPUT   DROP
$IP4TABLES -P OUTPUT  DROP
$IP4TABLES -P FORWARD DROP
$IP4TABLES -A INPUT -i lo -j ACCEPT
$IP4TABLES -A OUTPUT -o lo -j ACCEPT
$IP4TABLES -A INPUT -m state --state INVALID -j DROP
$IP4TABLES -A INPUT -m state --state NEW,RELATED -p tcp ! --tcp-flags ALL SYN -j DROP
$IP4TABLES -A INPUT -p tcp --destination-port auth -j REJECT --reject-with tcp-reset

DNS_IP=(127.0.0.1 127.0.2.1 8.8.8.8)
DNS_PROTOCOL=(tcp udp)
for IP in ${DNS_IP[@]}; do
    for PROTOCOL in ${DNS_PROTOCOL[@]}; do
        $IP4TABLES -A INPUT  -p $PROTOCOL -s $IP --sport 443 -m state --state ESTABLISHED,RELATED -j ACCEPT
        $IP4TABLES -A OUTPUT -p $PROTOCOL -d $IP --dport 443 -m state --state NEW,ESTABLISHED,RELATED -j ACCEPT
        $IP4TABLES -A INPUT  -p $PROTOCOL -s $IP --sport 53 -m state --state ESTABLISHED,RELATED -j ACCEPT
        $IP4TABLES -A OUTPUT -p $PROTOCOL -d $IP --dport 53 -m state --state NEW,ESTABLISHED,RELATED -j ACCEPT
    done
done

ALLOWED_REMOTE_UDP_SERVICES=()
for SERVICE in ${ALLOWED_REMOTE_UDP_SERVICES[@]}; do
    $IP4TABLES -A INPUT  -p udp --sport $SERVICE -m state --state ESTABLISHED,RELATED -j ACCEPT
    $IP4TABLES -A OUTPUT -p udp --dport $SERVICE -m state --state NEW,ESTABLISHED,RELATED -j ACCEPT
done

ALLOWED_REMOTE_TCP_SERVICES=(80 443)
for SERVICE in ${ALLOWED_REMOTE_TCP_SERVICES[@]}; do
    $IP4TABLES -A INPUT  -p tcp --sport $SERVICE -m state --state ESTABLISHED,RELATED -j ACCEPT
    $IP4TABLES -A OUTPUT -p tcp --dport $SERVICE -m state --state NEW,ESTABLISHED,RELATED -j ACCEPT
done

TRUSTED_IP=()
ALLOWED_LOCAL_TCP_SERVICES=()
for IP in ${TRUSTED_IP[@]}; do
    for SERVICE in ${ALLOWED_LOCAL_TCP_SERVICES[@]}; do
        $IP4TABLES -A INPUT  -p tcp -s $IP --dport $SERVICE -m state --state NEW,ESTABLISHED,RELATED -j ACCEPT
        $IP4TABLES -A OUTPUT -p tcp -d $IP --sport $SERVICE -m state --state ESTABLISHED,RELATED -j ACCEPT
    done
done
